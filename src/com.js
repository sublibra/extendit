const axios = require('axios');
const FormData = require('form-data');

const validURL = str => {
  var pattern = new RegExp('^(https?:\\/\\/)?' + // protocol
    '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
    '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
    '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
    '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
    '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
  return !!pattern.test(str);
}

const getData = async (url) => {
  try {
    const response = await axios.get(url);
    const data = response.data;
  } catch (error) {
    console.log(error);
  }
};

const createCsp = async (cspEntry) => {
  try {
    const baseUrl = '';
    const action = 'api/v1/csp-header';
    const url = baseUrl + action;
    const response = await axios.post(url, {
      origin: 'jonas.se',
      name: 'autogenerated',
      imgSrc: true
    });
    console.log(response);
  } catch (error) {
    console.log(error);
  }
}

const uploadExtension = async (target, key, extensionFile) => {
  const action = '/api/v1/extensions';
  let url = target + action;

  axios.defaults.headers.common['Authorization'] = 'Bearer ' + key;

  const form = new FormData();
  // Second argument  can take Buffer or Stream (lazily read during the request) too.
  // Third argument is filename if you want to simulate a file upload. Otherwise omit.
  form.append('name', 'autogenerated');
  form.append('type', 'visualization');
  form.append('file', extensionFile, 'file.zip');
  try {
    let response = await axios.post(url, form, {
      headers: form.getHeaders()
    });
    return response;
  } catch (err) {
    console.log(err.response.data);
    return err.response;
  }
};

module.exports = { getData, validURL, uploadExtension, createCsp }
